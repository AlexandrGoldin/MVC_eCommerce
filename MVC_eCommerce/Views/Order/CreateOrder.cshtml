@model MVC_eCommerce.Models.Order.UserVM
@{
    ViewBag.Title = "CreateOrder";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create Order</h2>
@if (TempData["SM"] != null)
{
    <div class="alert alert-success">
        @TempData["SM"]
    </div>
}

@Html.AntiForgeryToken()

<h4>Cart Details</h4>
<div class="container">
    <div class="row cart-list">
        <table class="table">
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Price($)
                </th>
                <th>
                    Count
                </th>
                <th>
                    Image
                </th>
                <th>
                    Line Total($)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.Order.Cart)
            {
                int lineTotal = Convert.ToInt32(item.Count * item.Product.Price);
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Product.ProductName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Product.Price)
                    </td>
                    <td class="qty@(item.Product.Id)">
                        @Html.DisplayFor(modelItem => item.Count)
                    </td>
                    <td>
                        <img class="img-cartDetails" src="~/ProductImg/@item.Product.ProductImage"
                             style="cursor:pointer;height:100%;width:80px" />
                    </td>
                    <td class="total@(item.Product.Id)">
                        @lineTotal
                    </td>
                </tr>
            }
            <tr>
                <td class="grandtotal" colspan="6" style="text-align:right">
                    <b>Grand total: <span>@Html.DisplayFor(modelItem => Model.Order.TotalPrice)$</span></b>
                </td>
            </tr>
        </table>
    </div>
</div>
<div class="container">
    <div class="class row">
        <div class="col-md-4 col-sm-3 col-xs-2">

        </div>
        <div class="col-md-4 col-sm-6 col-xs-8 well">
            <h2 style="text-align: center">Castomer Details</h2>

            @if (TempData["SM"] == null && TempData["DM"] != null)
            {
                <div class="alert alert-danger">
                    @TempData["DM"]
                </div>
            }

            @using (Html.BeginForm("CreateOrder", "Order", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="form">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label class="castomerForm1">Castomer Name</label>
                            @Html.EditorFor(model => model.CastomerName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter name" } })
                            @Html.ValidationMessageFor(model => model.CastomerName, "", new { @class = "text-danger" })
                            <br>
                        </div>
                        <div class="form-group col-md-6">
                            <label class="castomerForm2">Email address</label>
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter email" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            <br>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="castomerForm3">Address</label>
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter address" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        <br>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                        </div>
                        <div class="col-md-6">
                            <button type="submit" class="btn btn-success btn-block">Order</button>
                        </div>
                        <div class="col-md-3">
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
